# Config that is very close to a i3 window manager's keybinding.

# Set prefix to <C-space>
set -g prefix "C- "
bind-key "C- " send-prefix

set -s escape-time 0
setw -g aggressive-resize on

# First remove *all* keybindings
unbind-key -a

# List keys
bind-key ? list-keys

# Session management
bind-key ` detach

# Copy mode flow:
# 1. <leader>[ to enter copy mode.
# 2. v to begin selection.
# 3. y to copy selection.
# 4. ] to paste selection.
bind-key [ copy-mode
bind-key ] paste-buffer
bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# Provide dvorak mappings for movement keys
bind -T copy-mode-vi 'h' send-keys -X cursor-left
bind -T copy-mode-vi 't' send-keys -X cursor-down
bind -T copy-mode-vi 'n' send-keys -X cursor-up
bind -T copy-mode-vi 's' send-keys -X cursor-right
bind -T copy-mode-vi 'H' send-keys -X start-of-line
bind -T copy-mode-vi 'T' send-keys -X halfpage-down
bind -T copy-mode-vi 'N' send-keys -X halfpage-up
bind -T copy-mode-vi 'S' send-keys -X end-of-line

# Refresh client
bind-key R refresh-client \; display-message "Refresh already"

# Config Reloads
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded"

# Start with index 1
set -g base-index 1
setw -g pane-base-index 1

# Clock
setw -g clock-mode-style 24

# Mouse on/off
set -g mouse off

# Split window
bind-key "_" split-window -h
bind-key "-" split-window -v

# Rotate Window
bind-key -n M-o rotate-window

# Switch pane with Control (no prefix)
bind-key -n C-h select-pane -L
bind-key -n C-t select-pane -D
bind-key -n C-n select-pane -U
bind-key -n C-s select-pane -R

# Resize pane (with repeat).
bind-key -r h resize-pane -L 5 \; display-message "Resize left"
bind-key -r t resize-pane -D 5 \; display-message "Resize down"
bind-key -r n resize-pane -U 5 \; display-message "Resize up"
bind-key -r s resize-pane -R 5 \; display-message "Resize right"

# Swap pane (with repeat).
bind-key -r H swap-pane -U
bind-key -r S swap-pane -D

# Cycle between layouts.
bind-key -n M-Space next-layout

# Zoom pane to fullscreen and back.
bind-key -n M-z resize-pane -Z

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Choose window
bind-key w choose-window

# Switch windows alt+number
bind-key -n M-1 if-shell 'tmux select-window -t 1' '' 'new-window -t 1'
bind-key -n M-2 if-shell 'tmux select-window -t 2' '' 'new-window -t 2'
bind-key -n M-3 if-shell 'tmux select-window -t 3' '' 'new-window -t 3'
bind-key -n M-4 if-shell 'tmux select-window -t 4' '' 'new-window -t 4'
bind-key -n M-5 if-shell 'tmux select-window -t 5' '' 'new-window -t 5'
bind-key -n M-6 if-shell 'tmux select-window -t 6' '' 'new-window -t 6'
bind-key -n M-7 if-shell 'tmux select-window -t 7' '' 'new-window -t 7'
bind-key -n M-8 if-shell 'tmux select-window -t 8' '' 'new-window -t 8'
bind-key -n M-9 if-shell 'tmux select-window -t 9' '' 'new-window -t 9'
bind-key -n M-0 if-shell 'tmux select-window -t 10' '' 'new-window -t 10'


# Change current pane to next window
bind-key 1 if-shell 'tmux join-pane -t :1' '' 'new-window -d -t 1; join-pane -t :1 ; kill-pane -a'
bind-key 2 if-shell 'tmux join-pane -t :2' '' 'new-window -d -t 2; join-pane -t :2 ; kill-pane -a'
bind-key 3 if-shell 'tmux join-pane -t :3' '' 'new-window -d -t 3; join-pane -t :3 ; kill-pane -a'
bind-key 4 if-shell 'tmux join-pane -t :4' '' 'new-window -d -t 4; join-pane -t :4 ; kill-pane -a'
bind-key 5 if-shell 'tmux join-pane -t :5' '' 'new-window -d -t 5; join-pane -t :5 ; kill-pane -a'
bind-key 6 if-shell 'tmux join-pane -t :6' '' 'new-window -d -t 6; join-pane -t :6 ; kill-pane -a'
bind-key 7 if-shell 'tmux join-pane -t :7' '' 'new-window -d -t 7; join-pane -t :7 ; kill-pane -a'
bind-key 8 if-shell 'tmux join-pane -t :8' '' 'new-window -d -t 8; join-pane -t :8 ; kill-pane -a'
bind-key 9 if-shell 'tmux join-pane -t :9' '' 'new-window -d -t 9; join-pane -t :9 ; kill-pane -a'
bind-key 0 if-shell 'tmux join-pane -t :10' '' 'new-window -d -t 10; join-pane -t :10 ; kill-pane -a'

# Kill Selected Pane
bind-key d kill-pane


# ---------------------------- styles -----------------------------------------
# Configure the status bar.
set -g status-interval 1
set -g status-position top
set -g status-justify left
set -g status-left-length 120
set -g status-right '#[fg=green,bold][ %Y-%m-%d %H:%M:%S ]#[default]'
set -g status-bg black
set -g status-fg white
setw -g window-status-current-fg colour208

# Put a border around active pane.
set-option -g pane-active-border-bg default
set-option -g pane-active-border-fg colour208


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-t if-shell "$is_vim" "send-keys C-t"  "select-pane -D"
bind-key -n C-n if-shell "$is_vim" "send-keys C-n"  "select-pane -U"
bind-key -n C-s if-shell "$is_vim" "send-keys C-s"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-t select-pane -D
bind-key -T copy-mode-vi C-n select-pane -U
bind-key -T copy-mode-vi C-s select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l


# ---------------------------- tmux-plugins/tpm --------------------------------
# !!! After adding plugins, install them via <prefix>I.
# https://github.com/tmux-plugins/tpm

# Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'off'

# Smart pane switching with awareness of Vim splits.
#set -g @plugin 'christoomey/vim-tmux-navigator'
# ---------------------------- tmux-plugins/tpm (end) --------------------------

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
